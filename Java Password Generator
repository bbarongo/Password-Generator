// This program generates passwords combining a random length of characters 
// The purpose of this program is to generate passwords for online accounts

import java.security.SecureRandom;
import java.util.Scanner;

public class PasswordCreator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // This line gets user input for password criteria
        System.out.print("Enter the length of the password: ");
        int length = scanner.nextInt();

        System.out.print("Do you want to include uppercase letters? (true/false): ");
        boolean includeUppercase = scanner.nextBoolean();

        System.out.print("Do you want to include numbers? (true/false): ");
        boolean includeNumbers = scanner.nextBoolean();

        System.out.print("Do you want to include special characters? (true/false): ");
        boolean includeSpecialChars = scanner.nextBoolean();

        // This line generates and display the password
        String password = generatePassword(length, includeUppercase, includeNumbers, includeSpecialChars);

        System.out.println("Generated Password: " + password);
    }

    // Generates a random password based on specific criteria.
    // Critertia being: Length of password, use of numbers, special characters, uppercase letters

    private static String generatePassword(int length, boolean includeUppercase, boolean includeNumbers, boolean includeSpecialChars) {
        // Define character sets for each type of character
        String lowercaseChars = "abcdefghijklmnopqrstuvwxyz";
        String uppercaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String numberChars = "0123456789";
        String specialChars = "!@#$%^&*()-_=+[]{}|;:'\",.<>/?";

        // StringBuilder to store valid characters based on user criteria
        StringBuilder validChars = new StringBuilder(lowercaseChars);

        // Include uppercase characters if specified
        if (includeUppercase) {
            validChars.append(uppercaseChars);
        }

        // Include numbers if specified
        if (includeNumbers) {
            validChars.append(numberChars);
        }

        // Include special characters if specified
        if (includeSpecialChars) {
            validChars.append(specialChars);
        }

        // SecureRandom for generating random indices
        SecureRandom random = new SecureRandom();

        // StringBuilder to build the password
        StringBuilder password = new StringBuilder();

        // Generate the password by randomly selecting characters from the valid set
        for (int i = 0; i < length; i++) {
            int randomIndex = random.nextInt(validChars.length());
            password.append(validChars.charAt(randomIndex));
        }

        return password.toString();
    }
}
